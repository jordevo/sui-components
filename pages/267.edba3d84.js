(window.webpackJsonp=window.webpackJsonp||[]).push([[267],{hLwY:function(e,n){e.exports='const styleList = {\n  listStyle: \'none\'\n}\n\nconst withState = BaseComponent =>\n  class BaseComponentWithState extends React.Component {\n    state = {value: this.props.value || \'\'}\n\n    handleChange = (e, {value}) => {\n      this.setState({value})\n    }\n    render() {\n      const {value} = this.state\n      const {handleChange, props} = this\n      return <BaseComponent {...props} value={value} onChange={handleChange} />\n    }\n  }\n\nconst MoleculeTextareaFieldWithState = withState(MoleculeTextareaField)\n\nreturn (\n  <div>\n    <h1>\n      <code>MoleculeTextareaField</code>\n    </h1>\n    <ul style={styleList}>\n      <li>\n        <h2>\n          With <code>placeholder</code>\n        </h2>\n        <MoleculeTextareaFieldWithState\n          id="commentd"\n          label="Comments"\n          maxChars={100}\n          placeholder="Please, write something cool..."\n          onChange={console.log}\n        />\n      </li>\n      <li>\n        <h2>\n          With Information HelpText and custom <code>textCharacters</code>\n        </h2>\n        <MoleculeTextareaField\n          id="description-inline"\n          label="Description"\n          helpText="Tu descripci\xf3n en Latin"\n          textCharacters="caracteres"\n        />\n      </li>\n      <li>\n        <h2>With Success Validation HelpText</h2>\n        <MoleculeTextareaField\n          id="description"\n          label="Description"\n          value="In some place of La Mancha which name..."\n          successText="Everything ok!"\n        />\n      </li>\n      <li>\n        <h2>\n          With Error validation HelpText and custom <code>maxChars</code>\n        </h2>\n        <MoleculeTextareaField\n          id="notes"\n          label="Notes"\n          errorText="All wrong!"\n          value="In some place of La Mancha which name..."\n          maxChars={60}\n        />\n      </li>\n    </ul>\n  </div>\n)\n'}}]);