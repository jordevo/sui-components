(window.webpackJsonp=window.webpackJsonp||[]).push([[145],{DdnD:function(n,e){n.exports="import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport cx from 'classnames'\n\nconst BASE_CLASS = 'sui-AtomTextarea'\nconst SIZES = {\n  SHORT: 'short',\n  LONG: 'long'\n}\n\nclass AtomTextarea extends Component {\n  getClassNames(size) {\n    return cx(BASE_CLASS, `${BASE_CLASS}--${size}`)\n  }\n\n  handleChange = ev => {\n    const {value} = ev.target\n    const {onChange} = this.props\n    onChange(ev, {value})\n  }\n\n  render() {\n    const {onChange, size, value, ...props} = this.props\n    const {handleChange} = this\n    return (\n      <textarea\n        {...props}\n        onChange={handleChange}\n        className={this.getClassNames(size)}\n        value={value}\n      />\n    )\n  }\n}\n\nAtomTextarea.displayName = 'AtomTextarea'\n\nAtomTextarea.propTypes = {\n  /** Size of textarea: 'short', 'long' */\n  size: PropTypes.oneOf(Object.values(SIZES)),\n\n  /** Handler triggered on change */\n  onChange: PropTypes.func,\n\n  /** Value (content) of the textarea */\n  value: PropTypes.string\n}\n\nAtomTextarea.defaultProps = {\n  size: SIZES.SHORT,\n  onChange: () => {}\n}\n\nexport default AtomTextarea\nexport {SIZES as AtomTextareaSizes}\n"}}]);