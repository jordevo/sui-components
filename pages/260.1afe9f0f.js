(window.webpackJsonp=window.webpackJsonp||[]).push([[260],{"2iw6":function(n,t){n.exports="function getButtons(variation = 'negative') {\n  return [\n    {\n      type: variation === 'positive' ? 'primary' : 'secondary',\n      children: 'Secondary',\n      negative: true\n    },\n    {\n      type: variation === 'positive' ? 'primary' : 'secondary',\n      children: 'Primary',\n      negative: true\n    }\n  ]\n}\n\nconst TEXT =\n  'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis vitae orci consectetur ligula vel.'\n\nfunction logClose() {\n  console.log('Closed!')\n}\n\nfunction Title({children}) {\n  return (\n    <p style={{color: '#999', fontSize: 12, textTransform: 'uppercase'}}>\n      {children}\n    </p>\n  )\n}\n\nclass PositionNotification extends React.Component {\n  state = {\n    show: false\n  }\n\n  toggleShow = () => {\n    const show = !this.state.show\n    this.setState({show})\n  }\n\n  handleClose = () => {\n    this.setState({show: false})\n  }\n\n  render() {\n    const {show} = this.state\n\n    return (\n      <div>\n        <button\n          className=\"sui-AtomButton sui-AtomButton--secondary\"\n          onClick={this.toggleShow}\n          style={{width: '100px'}}\n        >\n          {show ? 'Hide' : 'Show'}\n        </button>\n        <MoleculeNotification\n          buttons={getButtons()}\n          position={this.props.position}\n          show={show}\n          onClose={this.handleClose}\n        >\n          {TEXT}\n        </MoleculeNotification>\n      </div>\n    )\n  }\n}\n\nconst TYPES = ['info', 'success', 'warning', 'error', 'system']\nconst VARIATIONS = ['positive', 'negative']\n\nreturn (\n  <div>\n    <h1>Notification</h1>\n    <h2>Types and variations</h2>\n    {TYPES.map(type =>\n      VARIATIONS.map(variation => (\n        <React.Fragment key={type + variation}>\n          <Title>\n            Type: {type} - Variation: {variation}\n          </Title>\n          <MoleculeNotification\n            autoClose=\"manual\"\n            buttons={getButtons(variation)}\n            onClose={logClose}\n            type={type}\n            variation={variation}\n          >\n            {TEXT}\n          </MoleculeNotification>\n        </React.Fragment>\n      ))\n    )}\n    <br />\n    <h2>With children content</h2>\n    <MoleculeNotification autoClose=\"manual\" type=\"info\" onClose={logClose}>\n      <span>\n        Lorem ipsum dolor sit amet, <a href=\"#\">consectetur adipiscing</a> elit.\n        Duis vitae orci consectetur ligula vel.\n      </span>\n    </MoleculeNotification>\n    <br />\n    <h2>AutoClose</h2>\n    <Title>Short</Title>\n    <MoleculeNotification buttons={getButtons()} onClose={logClose}>\n      {TEXT}\n    </MoleculeNotification>\n    <Title>Medium</Title>\n    <MoleculeNotification\n      autoClose=\"medium\"\n      buttons={getButtons()}\n      onClose={logClose}\n    >\n      {TEXT}\n    </MoleculeNotification>\n    <Title>Long</Title>\n    <MoleculeNotification\n      autoClose=\"long\"\n      buttons={getButtons()}\n      onClose={logClose}\n    >\n      {TEXT}\n    </MoleculeNotification>\n    <br />\n    <h2>Positions</h2>\n    <table width=\"auto\" cellPadding=\"8\" cellSpacing=\"0\" style={{padding: 15}}>\n      <tbody>\n        <tr>\n          <td>\n            <Title>Top</Title>\n          </td>\n          <td>\n            <PositionNotification position=\"top\" />\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <Title>Bottom</Title>\n          </td>\n          <td>\n            <PositionNotification position=\"bottom\" />\n          </td>\n        </tr>\n        <tr>\n          <td style={{verticalAlign: 'top', paddingTop: '20px'}}>\n            <Title>Relative</Title>\n          </td>\n          <td>\n            <PositionNotification position=\"relative\" />\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n)\n"}}]);