(window.webpackJsonp=window.webpackJsonp||[]).push([[136],{eINt:function(n,e){n.exports="import React, {Component} from 'react'\nimport ReactDOM from 'react-dom'\nimport PropTypes from 'prop-types'\nimport cx from 'classnames'\nimport SUILoader from './SUILoader'\n\nconst TYPES = {\n  FULL: 'full',\n  SECTION: 'section'\n}\n\nconst DELAY = 500 // ms\nconst BASE_CLASS = 'sui-AtomSpinner'\nconst CLASS_FULL = `${BASE_CLASS}--fullPage`\nconst CLASS_NO_BACKGROUND = `${BASE_CLASS}--noBackground`\n\nclass AtomSpinner extends Component {\n  state = {\n    delayed: this.props.delayed\n  }\n\n  get _parentNodeClassList() {\n    if (this._parentNodeClassListCache) return this._parentNodeClassListCache\n\n    this._parentNodeClassListCache = ReactDOM.findDOMNode(\n      this\n    ).parentNode.classList\n    return this._parentNodeClassListCache\n  }\n\n  get _parentClassName() {\n    const {type, noBackground} = this.props\n    return cx({\n      [BASE_CLASS]: type === TYPES.SECTION,\n      [CLASS_FULL]: type === TYPES.FULL,\n      [CLASS_NO_BACKGROUND]: noBackground\n    })\n  }\n\n  componentDidMount() {\n    if (!this.state.delayed) {\n      this._addParentClass()\n      return\n    }\n\n    this.timer = setTimeout(() => {\n      this.setState({delayed: false}, this._addParentClass)\n    }, DELAY)\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timer)\n    this._removeParentClass()\n  }\n\n  _removeParentClass() {\n    this._parentNodeClassList.remove(...this._parentClassName.split(' '))\n  }\n\n  _addParentClass() {\n    this._parentNodeClassList.add(...this._parentClassName.split(' '))\n  }\n\n  render() {\n    const {loader} = this.props\n    const {delayed} = this.state\n    return !delayed ? loader : <noscript />\n  }\n}\n\nAtomSpinner.displayName = 'AtomSpinner'\n\nAtomSpinner.propTypes = {\n  /**\n   * Possible options:\n   * 'FULL': The spinner fits the whole page container\n   * 'SECTION': The spinner fits a specific site component\n   */\n  type: PropTypes.oneOf(Object.values(TYPES)),\n\n  /** Makes the spinner appear after 500 ms */\n  delayed: PropTypes.bool,\n\n  /** No background */\n  noBackground: PropTypes.bool,\n\n  /** Loader to be shown in the middle of the container */\n  loader: PropTypes.object\n}\n\nAtomSpinner.defaultProps = {\n  delayed: false,\n  type: TYPES.SECTION,\n  loader: <SUILoader />\n}\n\nexport default AtomSpinner\nexport {TYPES as AtomSpinnerTypes}\n"}}]);