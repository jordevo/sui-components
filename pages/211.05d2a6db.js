(window.webpackJsonp=window.webpackJsonp||[]).push([[211],{xlMq:function(n,e){n.exports="import React from 'react'\nimport PropTypes from 'prop-types'\nimport cx from 'classnames'\n\nimport Star from './components/Star'\n\nconst SIZES = {\n  SMALL: 'small',\n  MEDIUM: 'medium',\n  LARGE: 'large'\n}\n\nconst BASE_CLASS = `sui-MoleculeRating`\nconst CLASS_CONTAINER_STARS = `${BASE_CLASS}-containerStars`\nconst CLASS_LABEL = `${BASE_CLASS}-label`\nconst CLASS_LINK = `${BASE_CLASS}--withLink`\n\nconst MoleculeRating = ({\n  numStars = 5,\n  value,\n  size = SIZES.SMALL,\n  label,\n  href,\n  target,\n  linkFactory: Link = ({children, ...rest} = {}) => <a {...rest}>{children}</a>,\n  ...props\n}) => {\n  const className = cx(BASE_CLASS, `${BASE_CLASS}--${size}`, {\n    [CLASS_LINK]: href\n  })\n\n  const labelLink = href ? (\n    <Link\n      href={href}\n      target={target}\n      rel={target === '_blank' ? 'noopener' : undefined}\n    >\n      {label}\n    </Link>\n  ) : (\n    label\n  )\n\n  return (\n    <div className={className}>\n      <div className={CLASS_CONTAINER_STARS}>\n        {new Array(numStars)\n          .fill(0)\n          .map((_, index) => (\n            <Star key={index} index={index} value={value} {...props} />\n          ))}\n      </div>\n      <p className={CLASS_LABEL}>{labelLink}</p>\n    </div>\n  )\n}\n\nMoleculeRating.displayName = 'MoleculeRating'\n\nMoleculeRating.propTypes = {\n  /** Number of Stars */\n  numStars: PropTypes.number,\n\n  /** Value of Rating */\n  value: PropTypes.number,\n\n  /** Label of Rating */\n  label: PropTypes.string,\n\n  /** size */\n  size: PropTypes.oneOf(Object.values(SIZES)),\n\n  /** Target to be added on the HTML link */\n  target: PropTypes.string,\n\n  /** URL to be added on the HTML link */\n  href: PropTypes.string,\n\n  /** Factory used to create navigation links */\n  linkFactory: PropTypes.func\n}\n\nexport default MoleculeRating\nexport {SIZES as MoleculeRatingSizes}\n"}}]);