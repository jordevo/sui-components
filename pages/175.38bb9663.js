(window.webpackJsonp=window.webpackJsonp||[]).push([[175],{"1MWk":function(n,o){n.exports="import React from 'react'\nimport PropTypes from 'prop-types'\nimport cx from 'classnames'\n\nimport {atomButtonTypes} from '@schibstedspain/sui-atom-button'\n\nconst BASE_CLASS = 'sui-MoleculeButtonGroup'\n\nconst getGroupPosition = (groupPositions, numChildren, index) => {\n  if (index === 0) return groupPositions.FIRST\n  if (index === numChildren - 1) return groupPositions.LAST\n  return groupPositions.MIDDLE\n}\n\nconst MoleculeButtonGroup = ({\n  children, // eslint-disable-line react/prop-types\n  fullWidth,\n  groupPositions,\n  type,\n  ...props\n}) => {\n  const numChildren = children.length\n  const getGroupPositionByIndex = getGroupPosition.bind(\n    null,\n    groupPositions,\n    numChildren\n  )\n  const extendedChildren = React.Children.toArray(children)\n    .filter(Boolean)\n    .map((child, index) => {\n      const groupPosition = getGroupPositionByIndex(index)\n      return React.cloneElement(child, {\n        ...props,\n        type,\n        groupPosition,\n        fullWidth\n      })\n    })\n  return (\n    <div className={cx(BASE_CLASS, fullWidth && `${BASE_CLASS}--fullWidth`)}>\n      {extendedChildren}\n    </div>\n  )\n}\n\nMoleculeButtonGroup.displayName = 'MoleculeButtonGroup'\n\nMoleculeButtonGroup.propTypes = {\n  /** Type of button: 'primary' (default), 'accent', 'secondary', 'tertiary' */\n  type: PropTypes.oneOf(atomButtonTypes),\n\n  /** If buttons should stretch to fit the width of container */\n  fullWidth: PropTypes.bool,\n\n  /** groupPositions constants (FIRST, MIDDLE, LAST) */\n  groupPositions: PropTypes.object\n}\n\nMoleculeButtonGroup.defaultProps = {\n  groupPositions: {\n    FIRST: 'first',\n    MIDDLE: 'middle',\n    LAST: 'last'\n  },\n  type: 'secondary'\n}\n\nexport default MoleculeButtonGroup\n"}}]);