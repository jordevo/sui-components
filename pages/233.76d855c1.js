(window.webpackJsonp=window.webpackJsonp||[]).push([[233],{KjJs:function(n,e){n.exports='class SimpleCheckboxRadioForm extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      country: \'\',\n      category: \'\',\n      termsService: false\n    }\n\n    this.onChange = this.onChange.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n  }\n\n  onChange(ev, {value, field}) {\n    this.setState({\n      [field]: value\n    })\n  }\n\n  onSubmit(ev) {\n    ev.preventDefault()\n    ev.stopPropagation()\n\n    window.alert(JSON.stringify(this.state))\n  }\n\n  isCountrySelected(country) {\n    return this.state.country === country\n  }\n\n  isCategorySelected(category) {\n    return this.state.category === category\n  }\n\n  styleIsCategorySelected(category) {\n    return this.isCategorySelected(category)\n      ? {display: \'inline-block\', border: \'1px solid black\'}\n      : {display: \'inline-block\', border: \'1px solid white\'}\n  }\n\n  render() {\n    const {termsService} = this.state\n    return (\n      <form\n        className="Form"\n        style={{\n          border: \'1px solid #CCC\',\n          background: \'#fff\',\n          marginTop: \'10px\',\n          padding: \'10px\'\n        }}\n        onSubmit={this.onSubmit}\n      >\n        <div style={{marginTop: \'10px\'}}>\n          <label htmlFor="terms_service">Accept Terms Service</label>\n          <AtomInput\n            id="terms_service"\n            type="checkbox"\n            checked={termsService}\n            onChange={ev => {\n              const value = !termsService\n              const field = \'termsService\'\n              this.onChange(ev, {value, field})\n            }}\n          />\n        </div>\n        <div style={{marginTop: \'10px\'}}>\n          <label htmlFor="ES">Spain</label>\n          <AtomInput\n            id="ES"\n            type="radio"\n            value="ES"\n            checked={this.isCountrySelected(\'ES\')}\n            onChange={(ev, {value}) => {\n              const field = \'country\'\n              this.onChange(ev, {value, field})\n            }}\n          />\n          <label style={{marginLeft: \'20px\'}} htmlFor="IT">\n            Italy\n          </label>\n          <AtomInput\n            id="IT"\n            type="radio"\n            value="IT"\n            checked={this.isCountrySelected(\'IT\')}\n            onChange={(ev, {value}) => {\n              const field = \'country\'\n              this.onChange(ev, {value, field})\n            }}\n          />\n          <label style={{marginLeft: \'20px\'}} htmlFor="FR">\n            France\n          </label>\n          <AtomInput\n            id="FR"\n            type="radio"\n            value="FR"\n            checked={this.isCountrySelected(\'FR\')}\n            onChange={(ev, {value}) => {\n              const field = \'country\'\n              this.onChange(ev, {value, field})\n            }}\n          />\n        </div>\n        <div\n          style={{\n            marginTop: \'10px\',\n            padding: \'10px\'\n          }}\n        >\n          <label\n            htmlFor="categoryHouse"\n            style={this.styleIsCategorySelected(\'house\')}\n          >\n            <img style={imageCheckboxStyle} src={logoHouse} alt="" />\n          </label>\n          <AtomInput\n            hideInput\n            id="categoryHouse"\n            type="radio"\n            value="house"\n            checked={this.isCategorySelected(\'house\')}\n            onChange={(ev, {value}) => {\n              const field = \'category\'\n              this.onChange(ev, {value, field})\n            }}\n          />\n\n          <label\n            htmlFor="categoryRocket"\n            style={this.styleIsCategorySelected(\'rocket\')}\n          >\n            <img style={imageCheckboxStyle} src={logoRocket} alt="" />\n          </label>\n          <AtomInput\n            hideInput\n            id="categoryRocket"\n            type="radio"\n            value="rocket"\n            checked={this.isCategorySelected(\'rocket\')}\n            onChange={(ev, {value}) => {\n              const field = \'category\'\n              this.onChange(ev, {value, field})\n            }}\n          />\n\n          <label\n            htmlFor="categoryGlobe"\n            style={this.styleIsCategorySelected(\'globe\')}\n          >\n            <img style={imageCheckboxStyle} src={logoGlobe} alt="" />\n          </label>\n          <AtomInput\n            hideInput\n            id="categoryGlobe"\n            value="globe"\n            type="radio"\n            checked={this.isCategorySelected(\'globe\')}\n            onChange={(ev, {value}) => {\n              const field = \'category\'\n              this.onChange(ev, {value, field})\n            }}\n          />\n        </div>\n        <pre>{JSON.stringify(this.state, null, 2)}</pre>\n        <button>Send!</button>\n      </form>\n    )\n  }\n}\n\nconst field = {\n  marginBottom: \'16px\'\n}\n\nconst bankAccountMask = {\n  mask: \'ES00 0000 0000 00 0000000000\'\n}\n\nconst logoHouse =\n  \'https://cdn4.iconfinder.com/data/icons/icon-flat-icon-set/50/home-512.png\'\nconst logoRocket =\n  \'https://cdn4.iconfinder.com/data/icons/icon-flat-icon-set/50/rocket-128.png\'\nconst logoGlobe =\n  \'https://cdn4.iconfinder.com/data/icons/icon-flat-icon-set/50/globe-2-128.png\'\n\nconst imageCheckboxStyle = {\n  height: \'50px\',\n  width: \'50px\',\n  cursor: \'pointer\'\n}\n\nconst logoLocation = \'https://image.flaticon.com/icons/svg/67/67347.svg\'\nconst IconLocation = () => <img src={logoLocation} />\n\nreturn (\n  <div style={{padding: \'20px\'}}>\n    <div style={field}>\n      <h4>Size SMALL</h4>\n      <AtomInput\n        size={inputSizes.SMALL}\n        name="first"\n        placeholder="Small input"\n      />\n    </div>\n    <div style={field}>\n      <h4>With placeholder</h4>\n      <AtomInput name="second" placeholder="Medium Input" />\n    </div>\n    <div style={field}>\n      <h4>With placeholder and value</h4>\n      <AtomInput\n        name="second"\n        placeholder="Medium Input"\n        value="Somewhere over the..."\n      />\n    </div>\n    <div style={field}>\n      <h4>Disabled</h4>\n      <AtomInput name="disabled" placeholder="Medium Disabled Input" disabled />\n    </div>\n    <div style={field}>\n      <h4>Read Only</h4>\n      <AtomInput name="disabled" value="Medium Read Only Input" readOnly />\n    </div>\n    <div style={field}>\n      <h4>Type: number</h4>\n      <AtomInput\n        type="number"\n        name="number"\n        placeholder="Number only input"\n        charsSize={10}\n      />\n    </div>\n    <div style={field}>\n      <h4>Type: date</h4>\n      <AtomInput type="date" name="date" charsSize={10} />\n    </div>\n    <div style={field}>\n      <h4>With leftAddon and rightAddon</h4>\n      <AtomInput\n        name="second"\n        placeholder="Medium Input"\n        leftAddon="http://"\n        rightAddon="@schibsted.com"\n      />\n    </div>\n    <div style={field}>\n      <h4>With leftIcon</h4>\n      <AtomInput\n        name="second"\n        placeholder="Medium Input"\n        leftIcon={<IconLocation />}\n      />\n    </div>\n    <div style={field}>\n      <h4>With leftIcon and rightAddon</h4>\n      <AtomInput\n        name="second"\n        placeholder="Medium Input"\n        leftIcon={<IconLocation />}\n        rightAddon="Location"\n      />\n    </div>\n    <div style={field}>\n      <h4>With errorState=false</h4>\n      <AtomInput name="second" placeholder="Success input" errorState={false} />\n    </div>\n    <div style={field}>\n      <h4>With errorState=true</h4>\n      <AtomInput name="second" placeholder="Error input" errorState={true} />\n    </div>\n    <div style={field}>\n      <h4>Type: sui-password</h4>\n      <AtomInput\n        type="sui-password"\n        name="password"\n        placeholder="Password Input"\n      />\n    </div>\n    <div style={field}>\n      <h4>Type: mask</h4>\n      <AtomInput\n        type="mask"\n        mask={bankAccountMask}\n        placeholder="ES00 0000 0000 00 0000000000"\n        charsSize={31}\n      />\n    </div>\n    <div style={field}>\n      <h4>With rightIcon</h4>\n      <AtomInput\n        name="second"\n        placeholder="Medium Input"\n        rightIcon={<IconLocation />}\n      />\n    </div>\n    <div style={field}>\n      <h4>With rightIcon and leftAddon</h4>\n      <AtomInput\n        name="second"\n        placeholder="Medium Input"\n        leftAddon="City"\n        rightIcon={<IconLocation />}\n      />\n    </div>\n    <div style={field}>\n      <h4>With rightIcon & handler on it</h4>\n      <AtomInput\n        name="second"\n        placeholder="Medium Input"\n        rightIcon={<IconLocation />}\n        onClickRightIcon={e => alert(\'clicked right icon\')}\n      />\n    </div>\n\n    <div style={field}>\n      <h4>No border</h4>\n      <AtomInput name="second" placeholder="Type something..." noBorder />\n    </div>\n\n    <div style={field}>\n      <h4>onEnter</h4>\n      <AtomInput\n        name="second"\n        onEnter={ev => {\n          const {\n            target: {value}\n          } = ev\n          ev.preventDefault()\n          alert(value)\n        }}\n      />\n    </div>\n\n    <div style={field}>\n      <h4>onEnter on Tab</h4>\n      <AtomInput\n        name="second"\n        onEnter={ev => {\n          const {\n            target: {value}\n          } = ev\n          ev.preventDefault()\n          alert(value)\n        }}\n        onEnterKey="Tab"\n      />\n    </div>\n\n    <h2>Checkbox & Radio</h2>\n\n    <SimpleCheckboxRadioForm />\n  </div>\n)\n'}}]);