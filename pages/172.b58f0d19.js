(window.webpackJsonp=window.webpackJsonp||[]).push([[172],{cTzZ:function(n,e){n.exports="/* eslint-disable react/prop-types */\nimport PropTypes from 'prop-types'\n\nimport React, {useState} from 'react'\nimport Chevronright from '@schibstedspain/sui-svgiconset/lib/Chevronright'\nimport cx from 'classnames'\n\nconst breadcrumbClassName = isExpanded =>\n  cx('sui-BreadcrumbBasic', {\n    'is-expanded': isExpanded\n  })\n\nexport default function BreadcrumbBasic({items, icon, linkFactory: Link}) {\n  const [isExpanded, setIsExpanded] = useState(false)\n  const expandBreadcrumb = () => setIsExpanded(true)\n\n  const IconAngle = icon || Chevronright\n  const numItems = items.length - 1\n\n  return (\n    <nav aria-label=\"breadcrumb\" role=\"navigation\">\n      <div className={breadcrumbClassName(isExpanded)}>\n        <button onClick={expandBreadcrumb} className=\"sui-BreadcrumbBasic-btn\">\n          ...\n        </button>\n        <ul className=\"sui-BreadcrumbBasic-list\">\n          {items.map(({url, label}, index) => (\n            <li className=\"sui-BreadcrumbBasic-listItem\" key={index}>\n              {index !== 0 &&\n                index <= numItems && (\n                  <IconAngle svgClass=\"sui-BreadcrumbBasic-icon\" />\n                )}\n              {url ? (\n                <Link href={url} className=\"sui-BreadcrumbBasic-link\">\n                  {label}\n                </Link>\n              ) : (\n                label\n              )}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </nav>\n  )\n}\n\nBreadcrumbBasic.displayName = 'BreadcrumbBasic'\n\nBreadcrumbBasic.propTypes = {\n  /**\n   * List of link objects\n   */\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      /**\n       * link text\n       */\n      label: PropTypes.string.isRequired,\n      /**\n       * URL for the link\n       */\n      url: PropTypes.string\n    })\n  ).isRequired,\n  /**\n   * Comments custom icon (React component).\n   */\n  icon: PropTypes.func,\n  /**\n   * Function for creating links so it allow to customize it\n   */\n  linkFactory: PropTypes.func\n}\n\nBreadcrumbBasic.defaultProps = {\n  linkFactory: ({href, className, children}) => (\n    <a href={href} className={className}>\n      {children}\n    </a>\n  )\n}\n"}}]);