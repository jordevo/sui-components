(window.webpackJsonp=window.webpackJsonp||[]).push([[117],{jnyJ:function(n,e){n.exports='# AtomImage\n\nAtomImage is a component that loads an image inside, maintaining all the accesibility attributes. This component can be set to show a placeholder image, a skeleton and/or a spinner while the final image is being loaded. This component will also show an Error Box if the image could\'t be loaded\n\n\n## Installation\n\n```sh\n$ npm install @s-ui/react-atom-image --save\n```\n\n## Usage\n\nAfter importing the component `AtomImage` like this\n\n```javascript\nimport AtomImage from \'@s-ui/react-atom-image\'\n```\n\n### Basic usage\n\n```javascript\n<AtomImage \n  src={ urlImage } \n  alt="Nice Picture" \n/>\n```\n\n### With skeleton while loading\n\n```javascript\n<AtomImage \n  src={ urlImage } \n  alt="Nice Picture" \n  skeleton={ urlImageSkeleton } \n/>\n```\n\n### With placeholder while loading\n\n```javascript\n<AtomImage \n  src={ urlImage } \n  alt="Nice Picture" \n  placeholder={ urlImagePlaceholder }\n/>\n```\n\n### With spinner while loading\n\n```javascript\n<AtomImage \n  src={ urlImage } \n  alt="Nice Picture" \n  spinner={ Spinner }\n/>\n```\n\n### With custom Error if error loading\n\n```javascript\n<AtomImage \n  src={ urlImage } \n  alt="Nice Picture" \n  errorText="Oh no!! This image couldn\'t be loaded"\n  errorIcon={ MyIconErrorLoading }\n/>\n```\n\n\n> **Find full description and more examples in the [demo page](https://sui-components.now.sh/workbench/atom/image/demo).**'}}]);