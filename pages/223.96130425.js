(window.webpackJsonp=window.webpackJsonp||[]).push([[223],{E6si:function(e,n){e.exports="import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport MoleculeField from '@s-ui/react-molecule-field'\nimport AtomTextarea, {\n  AtomTextareaSizes as SIZES\n} from '@s-ui/react-atom-textarea'\n\nimport WithCharacterCount from './hoc/WithCharacterCount'\n\nconst MoleculeTextareaField = WithCharacterCount(\n  ({\n    id,\n    label,\n    maxChars,\n    textCharacters,\n    successText,\n    errorText,\n    helpText,\n    ...props\n  }) => {\n    return (\n      <MoleculeField\n        name={id}\n        label={label}\n        textCharacters={textCharacters}\n        successText={successText}\n        errorText={errorText}\n        helpText={helpText}\n        maxChars={maxChars}\n      >\n        <AtomTextarea id={id} {...props} />\n      </MoleculeField>\n    )\n  }\n)\n\nMoleculeTextareaField.displayName = 'MoleculeTextareaField'\n\nMoleculeTextareaField.defaultProps = {\n  maxChars: 4000\n}\n\nMoleculeTextareaField.propTypes = {\n  /** Maximum number of characters allowed  */\n  maxChars: PropTypes.number,\n\n  /** Text `characters` to be used in the character count HelpText */\n  textCharacters: PropTypes.string,\n\n  /** placeholder og the textarea */\n  placeholder: PropTypes.string,\n\n  /** Size of textarea: 'short', 'long' */\n  size: PropTypes.oneOf(Object.values(SIZES)),\n\n  /** Handler triggered on change */\n  onChange: PropTypes.func,\n\n  /** Value (content) of the textarea */\n  value: PropTypes.string,\n\n  /** Text to be displayed as label */\n  label: PropTypes.string,\n\n  /** used as for attribute and textarea id */\n  id: PropTypes.string,\n\n  /** Success message to display when success state  */\n  successText: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n\n  /** Error message to display when error state  */\n  errorText: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n\n  /** Help Text to display */\n  helpText: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n\n  /** Boolean to decide if field elements should be set inline */\n  inline: PropTypes.bool\n}\n\nexport default MoleculeTextareaField\n"}}]);